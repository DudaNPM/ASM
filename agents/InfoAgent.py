import jsonpickle

from spade import agent
from spade.behaviour import CyclicBehaviour


def printInfo(received):
    print('\n##################################################################################################################################################################################################################')
    print('######################################################################')
    print('###################################################################### LANDINGS')
    print('######################################################################')
    for landing in received.get('aterragens'):
        print(landing.toString())
    
    print('##################################################################################################################################################################################################################')
    print('######################################################################')
    print('###################################################################### TAKEOFFS')
    print('######################################################################')
    for takeoff in received.get('descolagens'):
        print(takeoff.toString())
    
    print('##################################################################################################################################################################################################################')
    print('######################################################################')
    print('###################################################################### GARES')
    print('######################################################################')
    for gare in received.get('gares'):
        print(gare.toString())
    
    print('##################################################################################################################################################################################################################')
    print('######################################################################')
    print('###################################################################### PISTAS')
    print('######################################################################')
    for pista in received.get('pistas'):
        print(pista.toString())
    
    print('##################################################################################################################################################################################################################\n')


class Info(agent.Agent):

    async def setup(self):
        print("Agent {}".format(str(self.jid)) + " starting...")

        ## Behaviours
        self.info = self.Info()
        self.add_behaviour(self.info)
    

    class Info(CyclicBehaviour):
        async def run(self):
            ## esperar pela msg da torre com informação dos voos
            msg = await self.receive(timeout=10)
            
            if msg:
                performative = msg.get_metadata('performative')

                if performative == 'global_inform':
                    received = jsonpickle.decode(msg.body)
                    printInfo(received)